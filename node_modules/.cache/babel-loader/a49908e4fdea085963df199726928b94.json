{"ast":null,"code":"var _jsxFileName = \"F:\\\\weather\\\\weather\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const apiKey = \"39b03ffb50ffbb93a24dd200557d9566\";\n  const [data, setData] = useState({\n    hits: []\n  });\n  const [city, setCity] = useState('');\n\n  const getWeatherData = async () => {\n    await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}`);\n  }; // get data from datajson \n\n\n  useEffect(async () => {\n    const result = await axios('data.json');\n    setData(result.data);\n    console.log(\"city = \", data);\n  }, []);\n\n  const handleSelect = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"welcome\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"city\",\n      children: \"Choose a city : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"data\",\n      id: \"city\",\n      children: data.cities.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"city\",\n          children: [item, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"5wqbCBrOVVewXP2CtvE9kz9BaFI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["F:/weather/weather/src/App.js"],"names":["React","useState","useEffect","axios","App","apiKey","data","setData","hits","city","setCity","getWeatherData","fetch","result","console","log","handleSelect","cities","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAGA,SAASC,GAAT,GAAc;AAAA;;AAEd,QAAMC,MAAM,GAAC,kCAAb;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAiBN,QAAQ,CAAC;AAAEO,IAAAA,IAAI,EAAE;AAAR,GAAD,CAA/B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMU,cAAc,GAAE,YAAU;AAC5B,UAAMC,KAAK,CAAE,oDAAmDH,IAAK,UAASJ,MAAO,EAA1E,CAAX;AACH,GAFD,CANc,CASb;;;AACAH,EAAAA,SAAS,CAAE,YAAY;AACtB,UAAMW,MAAM,GAAI,MAAMV,KAAK,CAAC,WAAD,CAA3B;AAEAI,IAAAA,OAAO,CAACM,MAAM,CAACP,IAAR,CAAP;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBT,IAAtB;AACD,GALS,EAKR,EALQ,CAAT;;AAOD,QAAMU,YAAY,GAAC,MAAI,CAEtB,CAFD;;AAKA,sBACE;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,EAAE,EAAC,MAAvB;AAAA,gBAEKV,IAAI,CAACW,MAAL,CAAYC,GAAZ,CAAiBC,IAAD,IAAS;AACzB,4BAAO;AAAQ,UAAA,KAAK,EAAC,MAAd;AAAA,qBAAuBA,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACA,OAFA;AAFL;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA,kBADF;AAcC;;GApCQf,G;;KAAAA,G;AAqCT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport axios from 'axios'\r\n\r\n\r\nfunction App(){\r\n\r\nconst apiKey=\"39b03ffb50ffbb93a24dd200557d9566\";\r\nconst [data, setData] =useState({ hits: [] });\r\nconst [city, setCity] = useState('')\r\n\r\nconst getWeatherData= async() =>{\r\n    await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}`)\r\n}\r\n // get data from datajson \r\n useEffect( async () => {\r\n  const result =  await axios('data.json',);\r\n\r\n  setData(result.data);\r\n  console.log(\"city = \",data)\r\n},[])\r\n\r\nconst handleSelect=()=>{\r\n\r\n}\r\n\r\n\r\nreturn(\r\n  <>\r\n  <h1>welcome</h1>\r\n  <label htmlFor=\"city\">Choose a city : </label>\r\n  <select name=\"data\" id=\"city\">\r\n    \r\n      {data.cities.map((item) =>{\r\n       return <option value=\"city\">{ item } </option>\r\n      })}\r\n    \r\n  </select>\r\n  </>\r\n);\r\n\r\n}\r\nexport default App;"]},"metadata":{},"sourceType":"module"}