{"ast":null,"code":"var _jsxFileName = \"F:\\\\weather\\\\weather\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const apiKey = \"39b03ffb50ffbb93a24dd200557d9566\";\n  const [city, setCity] = useState({\n    hits: []\n  });\n  const [selected, setSelected] = useState('');\n  const selectRef = useRef(null);\n\n  const getWeatherData = async () => {\n    await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${selected}&appid=${apiKey}`).then(response => response.json()).then(data => console.log(\"data = \", data));\n  }; //get data from data.json\n\n\n  const [Data, setData] = useState([]);\n\n  const getData = () => {\n    fetch('data.json', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(function (response) {\n      console.log(response);\n      return response.json();\n    }).then(function (myJson) {\n      console.log(\"my= \", myJson);\n      setData(myJson);\n      console.log(\"data = \", Data);\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []); // get data from datajson \n  // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  /*\r\n  useEffect( async () => {\r\n   const result =  await axios('data.json',);\r\n  \n   setCity(result.data);\r\n   console.log(\"city = \",city.cities)\r\n  \n  \n  },[city])\r\n  */\n\n  const handleSelect = () => {\n    /*\r\n    setSelected(selectRef.current.value )\r\n    console.log(selected)\r\n    */\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"welcome\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"city\",\n      children: \"Choose a city : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"city\",\n      id: \"city\",\n      ref: selectRef,\n      onChange: handleSelect()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"VyLrWgbMGmNDwksIOfL/EoARcxM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["F:/weather/weather/src/App.js"],"names":["React","useState","useEffect","useRef","axios","App","apiKey","city","setCity","hits","selected","setSelected","selectRef","getWeatherData","fetch","then","response","json","data","console","log","Data","setData","getData","headers","myJson","handleSelect"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAGA,SAASC,GAAT,GAAc;AAAA;;AAEd,QAAMC,MAAM,GAAC,kCAAb;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAiBP,QAAQ,CAAC;AAAEQ,IAAAA,IAAI,EAAE;AAAR,GAAD,CAA/B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMW,SAAS,GAAGT,MAAM,CAAC,IAAD,CAAxB;;AAGA,QAAMU,cAAc,GAAE,YAAU;AAC5B,UAAMC,KAAK,CAAE,oDAAmDJ,QAAS,UAASJ,MAAO,EAA9E,CAAL,CACLS,IADK,CACAC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADZ,EAELF,IAFK,CAEAG,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBF,IAAtB,CAFR,CAAN;AAGH,GAJD,CARc,CAad;;;AACA,QAAM,CAACG,IAAD,EAAQC,OAAR,IAAiBrB,QAAQ,CAAC,EAAD,CAA/B;;AACA,QAAMsB,OAAO,GAAC,MAAI;AAChBT,IAAAA,KAAK,CAAC,WAAD,EACJ;AACCU,MAAAA,OAAO,EAAG;AACR,wBAAgB,kBADR;AAER,kBAAU;AAFF;AADX,KADI,CAAL,CAQGT,IARH,CAQQ,UAASC,QAAT,EAAkB;AACtBG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACA,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAXH,EAYGF,IAZH,CAYQ,UAASU,MAAT,EAAiB;AACrBN,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBK,MAAnB;AACAH,MAAAA,OAAO,CAACG,MAAD,CAAP;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBC,IAAtB;AAED,KAjBH;AAkBD,GAnBD;;AAoBAnB,EAAAA,SAAS,CAAC,MAAI;AACZqB,IAAAA,OAAO;AACR,GAFQ,EAEP,EAFO,CAAT,CAnCc,CA4Cb;AACA;;AACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,QAAMG,YAAY,GAAE,MAAI;AAAC;AACzB;AACA;AACA;AAEC,GALD;;AAOA,sBACE;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,EAAE,EAAC,MAAvB;AAA8B,MAAA,GAAG,EAAEd,SAAnC;AAA8C,MAAA,QAAQ,EAAEc,YAAY;AAApE;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA,kBADF;AAYC;;GA7EQrB,G;;KAAAA,G;AA8ET,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\r\nimport axios from 'axios'\r\n\r\n\r\nfunction App(){\r\n\r\nconst apiKey=\"39b03ffb50ffbb93a24dd200557d9566\";\r\nconst [city, setCity] =useState({ hits: [] });\r\nconst [selected, setSelected] = useState('')\r\nconst selectRef = useRef(null);\r\n\r\n\r\nconst getWeatherData= async() =>{\r\n    await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${selected}&appid=${apiKey}`) \r\n    .then(response => response.json())\r\n    .then(data => console.log(\"data = \",data));\r\n}\r\n//get data from data.json\r\nconst [Data , setData]=useState([]);\r\nconst getData=()=>{\r\n  fetch('data.json'\r\n  ,{\r\n    headers : { \r\n      'Content-Type': 'application/json',\r\n      'Accept': 'application/json'\r\n     }\r\n  }\r\n  )\r\n    .then(function(response){\r\n      console.log(response)\r\n      return response.json();\r\n    })\r\n    .then(function(myJson) {\r\n      console.log(\"my= \",myJson);\r\n      setData(myJson)\r\n      console.log(\"data = \",Data);\r\n\r\n    });\r\n}\r\nuseEffect(()=>{\r\n  getData()\r\n},[])\r\n\r\n\r\n\r\n\r\n\r\n\r\n // get data from datajson \r\n // eslint-disable-next-line react-hooks/exhaustive-deps\r\n /*\r\n useEffect( async () => {\r\n  const result =  await axios('data.json',);\r\n\r\n  setCity(result.data);\r\n  console.log(\"city = \",city.cities)\r\n\r\n\r\n},[city])\r\n*/\r\n\r\n\r\nconst handleSelect =()=>{/*\r\n  setSelected(selectRef.current.value )\r\n  console.log(selected)\r\n  */\r\n\r\n}\r\n\r\nreturn(\r\n  <>\r\n  <h1>welcome</h1>\r\n  <label htmlFor=\"city\">Choose a city : </label>\r\n  <select name=\"city\" id=\"city\" ref={selectRef} onChange={handleSelect()}>\r\n    \r\n    \r\n    \r\n  </select>\r\n  </>\r\n);\r\n\r\n}\r\nexport default App;"]},"metadata":{},"sourceType":"module"}