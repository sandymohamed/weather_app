{"ast":null,"code":"var _jsxFileName = \"F:\\\\weather\\\\weather\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\"; //import axios from 'axios'\n\nimport Data from './data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const apiKey = \"39b03ffb50ffbb93a24dd200557d9566\";\n  const [city, setCity] = useState('');\n\n  const getWeatherData = async () => {\n    await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}`).then(response => response.json()).then(data => console.log(\"data = \", data));\n  };\n  /*\r\n  //get data from data.json\r\n  const [Data , setData]=useState([]);\r\n  const getData=()=>{\r\n    fetch('data.json'\r\n    ,{\r\n      headers : { \r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n       }\r\n    }\r\n    )\r\n      .then(function(response){\r\n        console.log(response)\r\n        return response.json();\r\n      })\r\n      .then(function(myJson) {\r\n        console.log(myJson);\r\n        setData(myJson)\r\n        console.log(\"data = \",Data.cities);\r\n  \r\n      });\r\n  }\r\n  useEffect(()=>{\r\n    getData()\r\n  },[])\r\n  */\n  // get data from datajson \n  // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  /*\r\n  useEffect( async () => {\r\n   const result =  await axios('data.json',);\r\n  \n   setCity(result.data);\r\n   console.log(\"city = \",city.cities)\r\n  \n  \n  },[city])\r\n  */\n\n\n  const handleSelect = () => {\n    let val = document.getElementById('city').value;\n    setCity(val);\n    console.log('city = ', city);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"welcome\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"city\",\n      children: \"Choose a city : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"city\",\n      id: \"city\",\n      onChange: handleSelect(),\n      children: Data.cities.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item,\n          children: [item, \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"BbIzi1csgupLqj4A6fqUxOYxArA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["F:/weather/weather/src/App.js"],"names":["React","useState","useEffect","useRef","Data","App","apiKey","city","setCity","getWeatherData","fetch","then","response","json","data","console","log","handleSelect","val","document","getElementById","value","cities","map","item","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD,C,CACA;;AACA,OAAOC,IAAP,MAAiB,aAAjB;;;;AAEA,SAASC,GAAT,GAAc;AAAA;;AAEd,QAAMC,MAAM,GAAC,kCAAb;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAiBP,QAAQ,CAAC,EAAD,CAA/B;;AAGA,QAAMQ,cAAc,GAAE,YAAU;AAC5B,UAAMC,KAAK,CAAE,oDAAmDH,IAAK,UAASD,MAAO,EAA1E,CAAL,CACLK,IADK,CACAC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADZ,EAELF,IAFK,CAEAG,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBF,IAAtB,CAFR,CAAN;AAGH,GAJD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;AACA;;AACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,QAAMG,YAAY,GAAE,MAAI;AACtB,QAAIC,GAAG,GAAEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KAAzC;AACAb,IAAAA,OAAO,CAACU,GAAD,CAAP;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBT,IAAvB;AAGD,GAND;;AAQA,sBACE;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,EAAE,EAAC,MAAvB;AAA+B,MAAA,QAAQ,EAAEU,YAAY,EAArD;AAAA,gBAECb,IAAI,CAACkB,MAAL,CAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAMC,KAAN,KAAe;AAC3B,4BAAO;AAAQ,UAAA,KAAK,EAAED,IAAf;AAAA,qBAAkCA,IAAlC;AAAA,WAAyBC,KAAzB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACA,OAFJ;AAFD;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA,kBADF;AAaC;;GAzEQpB,G;;KAAAA,G;AA0ET,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\r\n//import axios from 'axios'\r\nimport Data from './data.json'\r\n\r\nfunction App(){\r\n\r\nconst apiKey=\"39b03ffb50ffbb93a24dd200557d9566\";\r\nconst [city, setCity] =useState('');\r\n\r\n\r\nconst getWeatherData= async() =>{\r\n    await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}`) \r\n    .then(response => response.json())\r\n    .then(data => console.log(\"data = \",data));\r\n}\r\n/*\r\n//get data from data.json\r\nconst [Data , setData]=useState([]);\r\nconst getData=()=>{\r\n  fetch('data.json'\r\n  ,{\r\n    headers : { \r\n      'Content-Type': 'application/json',\r\n      'Accept': 'application/json'\r\n     }\r\n  }\r\n  )\r\n    .then(function(response){\r\n      console.log(response)\r\n      return response.json();\r\n    })\r\n    .then(function(myJson) {\r\n      console.log(myJson);\r\n      setData(myJson)\r\n      console.log(\"data = \",Data.cities);\r\n\r\n    });\r\n}\r\nuseEffect(()=>{\r\n  getData()\r\n},[])\r\n*/\r\n // get data from datajson \r\n // eslint-disable-next-line react-hooks/exhaustive-deps\r\n /*\r\n useEffect( async () => {\r\n  const result =  await axios('data.json',);\r\n\r\n  setCity(result.data);\r\n  console.log(\"city = \",city.cities)\r\n\r\n\r\n},[city])\r\n*/\r\n\r\n\r\nconst handleSelect =()=>{\r\n  let val =document.getElementById('city').value\r\n  setCity(val)\r\n  console.log('city = ', city)\r\n  \r\n\r\n}\r\n\r\nreturn(\r\n  <>\r\n  <h1>welcome</h1>\r\n  <label htmlFor=\"city\">Choose a city : </label>\r\n  <select name=\"city\" id=\"city\"  onChange={handleSelect()}>\r\n  \r\n  {Data.cities.map((item,index) =>{\r\n       return <option value={item}key={index}>{ item } </option>\r\n      })}\r\n  </select>\r\n  </>\r\n);\r\n\r\n}\r\nexport default App;"]},"metadata":{},"sourceType":"module"}